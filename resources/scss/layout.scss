@use 'sass:color';
@use 'sass:math';

@import 'base.scss';

html {
  -webkit-text-size-adjust: none;
  text-size-adjust: none;

  background-color: $html-background-color;
}

body {
  overflow-y: auto;
  scroll-behavior: smooth;
}

// Background element
body::after {
  content: '';
  position: fixed;
  inset: 0;
  z-index: -1;

  background-position: center;
  background-size: $background-dot-spacing $background-dot-spacing;
  background-image: radial-gradient(
    circle,
    $background-dot-color $background-dot-size,
    rgba(0, 0, 0, 0) $background-dot-size
  );
}

#root {
  @include body-text;
}

#nav-bar {
  @include user-select(none);

  position: fixed;
  z-index: 999;
  top: 0;
  left: 0;
  right: 0;

  height: $nav-bar-height;

  background-color: $nav-bar-background-color;
  border-bottom: $nav-bar-border-bottom;

  #nav-bar-inner {
    display: grid;
    place-content: stretch flex-end;
    grid-template: 'logo nav-items' minmax(0, 1fr) / min-content minmax(0, 1fr);
    gap: 20px;

    margin: 0 auto;
    padding: $nav-bar-padding;

    height: 100%;
    width: 100%;
    max-width: $page-max-width;
  }

  #nav-items {
    display: flex;
    flex-direction: row;
    align-items: stretch;

    justify-content: flex-end;

    @media only screen and (max-width: ($critical-b * 1px)) {
      > :first-child {
        // Hide home nav-item when below critical width
        display: none;
      }
    }
  }

  .nav-item {
    @include anchor-text($header-color, $header-color, $nav-item-hover-background-color);
    text-decoration: none !important;

    font-family: $nav-item-font-family;
    font-size: $nav-item-font-size;
    font-weight: $nav-item-font-weight;
    line-height: $nav-item-line-height;
    color: $nav-item-color;

    display: grid;
    place-items: center;

    padding: $nav-item-padding;

    white-space: nowrap;

    &.active {
      background-color: $nav-item-hover-background-color;
      cursor: default;
    }
  }
}

#logo {
  cursor: pointer;
  z-index: 1000;

  position: relative;
  top: $logo-top;
  left: $logo-left;

  height: $logo-height;
  width: $logo-width;

  display: grid;
  grid-template-columns: repeat(6, minmax(0, 1fr));

  font-family: $logo-font-family;
  font-size: $logo-font-size;
  font-weight: $logo-font-weight;
  line-height: $logo-line-height;
  color: $logo-color;

  @keyframes rollIn {
    from {
      transform: translateY(-100%);
    }
    to {
      transform: translateY(0);
    }
  }

  @keyframes rollOut {
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(100%);
    }
  }

  @mixin logo-char($background-color, $character) {
    position: relative;
    overflow: hidden;
    color: white;
    background-color: $background-color;

    &::before,
    &::after {
      content: $character;
      position: absolute;
      inset: 2px 0 0;
      text-align: center;
    }

    &::before {
      transform: translateY(-100%);
    }

    &.roll {
      &::before {
        animation: rollIn ease-in-out var(--duration) forwards;
      }
      &::after {
        animation: rollOut ease-in-out var(--duration) forwards;
      }
    }
  }

  $saturation-scale: 1.1;
  $lightness-scale: 1.05;

  > #a {
    @include logo-char(hsl(0, (69 * $saturation-scale) * 1%, (55 * $lightness-scale) * 1%), 'C');
  }
  > #b {
    @include logo-char(hsl(29, (87 * $saturation-scale) * 1%, (50 * $lightness-scale) * 1%), 'S');
  }
  > #c {
    @include logo-char(hsl(48, (80 * $saturation-scale) * 1%, (50 * $lightness-scale) * 1%), '1');
  }
  > #d {
    @include logo-char(hsl(108, (50 * $saturation-scale) * 1%, (43 * $lightness-scale) * 1%), '2');
  }
  > #e {
    @include logo-char(hsl(201, (58 * $saturation-scale) * 1%, (46 * $lightness-scale) * 1%), '3');
  }
  > #f {
    @include logo-char(hsl(248, (54 * $saturation-scale) * 1%, (53 * $lightness-scale) * 1%), '0');
  }
}

#page {
  margin: $page-margin;
  padding: $page-padding;

  min-height: 100vh;
  // Attempt at fixing iOS Safari
  @supports (-webkit-touch-callout: none) {
    min-height: -webkit-fill-available;
  }
  max-width: $page-max-width;

  background-color: $page-background-color;
  border-left: $page-border-sides;
  border-right: $page-border-sides;

  @media only screen and (max-width: ($middle-b * 1px)) {
    border-left: none;
    border-right: none;
  }

  display: grid;
  grid-template:
    'toc divider main' minmax(0, 1fr)
    / minmax(0, $toc-fr * 1fr) min-content minmax(0, $page-fr * 1fr);

  &::before {
    content: ' ';
    height: 100%;
    width: 0;
    display: grid;
    border-left: $page-divider;
    grid-area: divider;
  }
}

.toc {
  @include user-select(none);

  position: sticky;
  top: $nav-bar-height;

  padding: $toc-padding;

  align-self: flex-start;

  ol {
    cursor: pointer;
    list-style: none;
  }

  $content-map: (
    1: '',
    2: counter(toc2) '.\00a0',
    3: counter(toc2) '.' counter(toc3) '.\00a0',
    4: counter(toc2) '.' counter(toc3) '.' counter(toc4) '.\00a0',
    5: counter(toc2) '.' counter(toc3) '.' counter(toc4) '.' counter(toc5) '.\00a0',
    6: counter(toc2) '.' counter(toc3) '.' counter(toc4) '.' counter(toc5) '.' counter(toc6) '.\00a0',
  );
  @mixin toc-level($level) {
    font-size: $toc-font-size;
    font-weight: $toc-font-weight;
    line-height: $toc-line-height;
    color: $toc-color;

    position: relative;

    @if ($level != 1) {
      left: ($level - 2) * 8px;
      border-left: $toc-border-left;
    }
  }
  @mixin toc-item($level) {
    @if ($level != 1) {
      position: relative;
      left: -($level - 2) * 8px;
    }
  }
  @mixin toc-link($level) {
    @include anchor-text($toc-color, $toc-hover-color, $toc-hover-background-color);
    text-decoration: none !important;

    display: block;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;

    margin-left: -$toc-padding-left;
    padding-left: $toc-padding-left;

    margin-right: -$toc-padding-right;
    padding-right: $toc-padding-right;

    counter-reset: toc#{$level + 1};

    &::before {
      counter-increment: toc#{$level};
      content: map-get($content-map, $level);
      display: inline-block;
      height: 100%;
      padding-left: ($level - 1) * 8px;
    }
  }
  @for $i from 1 through 6 {
    .toc-level-#{$i} {
      @include toc-level($i);
    }
    .toc-item-h#{$i} {
      @include toc-item($i);
    }
    .toc-link-h#{$i} {
      @include toc-link($i);
    }
  }
}

// ================== Hide Table of Contents

@media only screen and (max-width: $breakpoint) {
  #page {
    grid-template: 'main' minmax(0, 1fr) / minmax(0, 1fr);

    &::before {
      content: unset;
    }
  }

  .toc {
    display: none;
  }

  main {
    padding-left: $main-padding-left;
  }
}

#page.hide-toc {
  .toc {
    visibility: hidden;
  }

  main {
    grid-area: main;
  }
}
